<?php
// $Id: taxonomy_theme.module,v 1.48.2.1 2007/02/25 16:49:08 profix898 Exp $

/**
 * Implementation of hook_perm().
 */
function taxonomy_theme_perm() {
  return array('administer taxonomy_theme', 'assign node themes');
}

/**
 * Implementation of hook_menu().
 */
function taxonomy_theme_menu($may_cache) {
  $items = array();
  
  if ($may_cache) {
    $items[] = array(
      'path' => 'admin/settings/taxonomy_theme',
      'title' => t('Taxonomy Theme'),
      'description' => t('Assign themes to taxonomy terms/vocabs and Drupal paths.'),
      'callback' => 'taxonomy_theme_admin',
      'callback arguments' => 'taxonomy_theme_admin_form',
      'access' => user_access('administer taxonomy_theme'),
    );
    $items[] = array(
      'path' => 'admin/settings/taxonomy_theme/admin',
      'title' => t('Global'),
      'type' => MENU_DEFAULT_LOCAL_TASK,
      'weight' => 0
    );
    if (variable_get('taxonomy_theme_enable', 0)) {
      $items[] = array(
        'path' => 'admin/settings/taxonomy_theme/taxonomy',
        'title' => t('Taxonomy'),
        'callback' => 'taxonomy_theme_admin',
        'callback arguments' => 'taxonomy_theme_admin_taxonomy_form',
        'access' => user_access('administer taxonomy_theme'),
        'type' => MENU_LOCAL_TASK,
        'weight' => 1
      );
      if (module_exists('forum') && variable_get('taxonomy_theme_method', 0)) {
        $items[] = array(
          'path' => 'admin/settings/taxonomy_theme/forum',
          'title' => t('Forum'),
          'callback' => 'taxonomy_theme_admin',
          'callback arguments' => 'taxonomy_theme_admin_forum_form',
          'access' => user_access('administer taxonomy_theme'),
          'type' => MENU_LOCAL_TASK,
          'weight' => 2
        );
      }
      if (variable_get('taxonomy_theme_extended_enable', 0)) {
        $items[] = array(
          'path' => 'admin/settings/taxonomy_theme/extended',
          'title' => t('Extended (Paths)'),
          'callback' => 'taxonomy_theme_admin',
          'callback arguments' => 'taxonomy_theme_admin_extended_form',
          'access' => user_access('administer taxonomy_theme'),
          'type' => MENU_LOCAL_TASK,
          'weight' => 3
        );
      }
    }
  }
  else {
    // perform theme selection and assign theme (using init_theme)
    if (variable_get('taxonomy_theme_enable', 0)) {
      _taxonomy_theme_assign();
    }
  }
  
  return $items;
}

/**
 * function taxonomy_theme_admin().
 */
function taxonomy_theme_admin($form) {
  require_once (drupal_get_path('module', 'taxonomy_theme').'/taxonomy_theme_admin.inc');
  return drupal_get_form($form);
}

/**
 * Implementation of hook_form_alter().
 */
function taxonomy_theme_form_alter($form_id, &$form) {
  if (($form_id == 'taxonomy_form_term') 
        || ($form_id == 'taxonomy_form_vocabulary')
        || ($form_id == 'forum_form_forum')
        || ($form_id == $form['type']['#value'].'_node_form')
        || ($form_id == 'node_type_form')
        || ($form_id == 'views_edit_view')
      ) {
    require_once (drupal_get_path('module', 'taxonomy_theme').'/taxonomy_theme_admin.inc');
    _taxonomy_theme_form_alter($form_id, $form);
  }
}

/**
 * Implementation of hook_node_type().
 */
function taxonomy_theme_node_type($op, $info) {
  switch ($op){
    case 'update':
      $default_theme = variable_get('theme_default', 'bluemarine');
      $nodetype_theme = variable_get('taxonomy_theme_nodetype|'.$info->old_type, $default_theme);
      variable_set('taxonomy_theme_nodetype|'.$info->type, $nodetype_theme);
      variable_del('taxonomy_theme_nodetype|'.$info->old_type);
      break;
    case 'delete':
      variable_del('taxonomy_theme_nodetype|'.$info->type);
      break;
  }
}

/**
 * function _taxonomy_theme_assign().
 */
function _taxonomy_theme_assign() {
  global $custom_theme;
  $uri = $_GET['q'];
  $default_theme = variable_get('theme_default', 'bluemarine');
  $theme_method = variable_get('taxonomy_theme_method', 0);
  // perform taxonomy-based theme selection
  if ($theme_method) {
    require_once (drupal_get_path('module', 'taxonomy_theme').'/taxonomy_theme_taxonomy.inc');
    _taxonomy_theme_select_forum($theme_method, $custom_theme, $default_theme, $uri);
    switch ($theme_method) {
      case TAXOTHEME_TERM:
        _taxonomy_theme_select_term($theme_method, $custom_theme, $default_theme, $uri);
        break;
      case TAXOTHEME_VOCAB:
        _taxonomy_theme_select_vocabulary($theme_method, $custom_theme, $default_theme, $uri);
        break;
      case TAXOTHEME_ALLTAXO:
        _taxonomy_theme_select_alltaxonomy($theme_method, $custom_theme, $default_theme, $uri);
        break;
      case TAXOTHEME_NODETYPE:
        _taxonomy_theme_select_nodetype($theme_method, $custom_theme, $default_theme, $uri);
        break;
      default:
        // TAXOTHEME_SKIP or nothing to do
    }
  }
  // perform extended (path-based) theme selection
  if (variable_get('taxonomy_theme_extended_enable', 0)) {
    require_once (drupal_get_path('module', 'taxonomy_theme').'/taxonomy_theme_paths.inc');
    _taxonomy_theme_select_paths($custom_theme, $uri);
  }
  // only apply for theme != default theme (users can have own default theme)
  if (isset($custom_theme) && ($custom_theme != $default_theme)) {
    init_theme();
  }
}

?>
