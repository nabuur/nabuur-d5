<?php
// $Id: taxonomy_theme.install,v 1.7.2.1 2007/02/25 16:49:08 profix898 Exp $

function taxonomy_theme_install() {
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      // insert table
      db_query("CREATE TABLE {theme_paths} (
                path varchar(255) NOT NULL default '',
                theme varchar(48) NULL,
                PRIMARY KEY (path)
                ) TYPE=MyISAM /*!40100 DEFAULT CHARACTER SET utf8 */;");
      // set module weight to -10
      db_query("UPDATE {system} SET weight = '-10' WHERE filename LIKE '%taxonomy_theme.module' LIMIT 1");
      db_query("INSERT INTO {variable} VALUES ('taxonomy_theme_enable', 's:1:\"1\";');");
      break;
    case 'pgsql':
      // insert table
      db_query("CREATE TABLE {theme_paths} (
                path varchar(255) NOT NULL default '',
                theme varchar(48) NULL default '',
                PRIMARY KEY (path)
                )");
      // set module weight to -10
      db_query("UPDATE {system} SET weight = '-10' WHERE filename LIKE '%taxonomy_theme.module'");
      db_query("INSERT INTO {variable} VALUES ('taxonomy_theme_enable', 's:1:\"1\";');");
      break;
  }
  return $ret;
}

function taxonomy_theme_update_1() {
  // needed when updating from previous tableless 4.7 version (schema_version = 0)
  // or from 4.6 version, hook_install is not executed properly in these cases
  $ret = array();
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      // insert table
      $ret[] = update_sql("CREATE TABLE IF NOT EXISTS {theme_pathes} (
                path varchar(255) NOT NULL default '',
                theme varchar(48) NULL,
                PRIMARY KEY (path)
                ) TYPE=MyISAM /*!40100 DEFAULT CHARACTER SET utf8 */;");
      // set module weight to -10
      $ret[] = update_sql("UPDATE {system} SET weight = '-10' WHERE filename LIKE '%taxonomy_theme.module' LIMIT 1");
      break;
    case 'pgsql':
      // insert table
      $ret[] = update_sql("CREATE TABLE {theme_pathes} (
                path varchar(255) NOT NULL default '',
                theme varchar(48) NULL default '',
                PRIMARY KEY (path)
                )");
      // set module weight to -10
      $ret[] = update_sql("UPDATE {system} SET weight = '-10' WHERE filename LIKE '%taxonomy_theme.module'");
      break;
  }
  return $ret;
}

function taxonomy_theme_update_2() {
  // default charset set to UTF-8 
  return _system_update_utf8(array('theme_pathes'));
}

function taxonomy_theme_update_3() {
  // migrate extended from 'variable' to 'theme_pathes' table
  $ret = array();
  $themes = list_themes();
  foreach ($themes as $themex) {
    $pathes_raw = variable_get('taxonomy_theme_path|' . $themex->name, '');
    $pathes = preg_split('/(\r\n?|\n)/', $pathes_raw, -1, PREG_SPLIT_NO_EMPTY);
    foreach ($pathes as $path) {
      $ret[] = update_sql("INSERT INTO {theme_pathes} (path, theme) VALUES ('%s', '%s')", $path, $themex->name);
    }
    variable_del('taxonomy_theme_path|' . $themex->name);
  }
  return $ret;
}

function taxonomy_theme_update_4() {
  return array(update_sql("RENAME TABLE {theme_pathes} TO {theme_paths}"));
}

function taxonomy_theme_uninstall() {
  //drop table
  db_query('DROP TABLE {theme_paths}');
  //remove variables
  db_query("DELETE FROM {variable} WHERE name LIKE 'taxonomy_theme_%'");
}

?>
