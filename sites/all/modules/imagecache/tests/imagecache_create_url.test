<?php // $Id: imagecache_create_url.test,v 1.1.2.2 2008/05/11 23:58:47 dopry Exp $

class ImageCacheUrlTests extends DrupalTestCase {

  /**
   * Drupal SimpleTest method: return metadata about the test.
   */
  function get_info() {
     return array(
       'name' => 'ImageCache Create URL Tests',
       'desc' => 'Assure that URLs are properly generated by imagecache_create_url(), as discussed at http://drupal.org/node/241541',
       'group' => 'ImageCache',
     );
  }

  /** 
   * No Clean URLs + public downloads  : http://example.com/?q=path/to/files/imagecache/preset/foo.jpg
   */
  function testDirtyUrlsPublicDownloads() {
    $this->_ImagecacheCreateUrlTest(
      false, FILE_DOWNLOADS_PUBLIC,
      'path/to/files', 'preset', 'foo.jpg',
      'http://example.com/?q=path/to/files/imagecache/preset/foo.jpg',
      'DirtyUrlsPublicDownloads'
    );
  }

  /**
   * Clean URLs    + public downloads  : http://example.com/path/to/files/imagecache/preset/foo.jpg
   */
  function testCleanUrlsPublicDownloads() {
    $this->_ImagecacheCreateUrlTest(
      true, FILE_DOWNLOADS_PUBLIC,
      'path/to/files', 'preset', 'foo.jpg',
      'http://example.com/path/to/files/imagecache/preset/foo.jpg',
      'CleanUrlsPublicDownloads'
    );
  }


  /**
   * No Clean URLs + private downloads : http://example.com/?q=system/files/imagecache/preset/foo.jpg
   */
  function testDirtyUrlsPrivateDownloads() {
    $this->_ImagecacheCreateUrlTest(
      false, FILE_DOWNLOADS_PRIVATE,
      'path/to/files', 'preset', 'foo.jpg',
      'http://example.com/?q=system/files/imagecache/preset/foo.jpg',
      'DirtyUrlsPrivateDownloads'
    );
  }


  /**
   * Clean URLs    + private downloads : http://example.com/system/files/imagecache/preset/foo.jpg
   */
  function testCleanUrlsPrivateDownloads() {
    $this->_ImagecacheCreateUrlTest(
      true, FILE_DOWNLOADS_PRIVATE,
      'path/to/files', 'preset', 'foo.jpg',
      'http://example.com/system/files/imagecache/preset/foo.jpg',
      'CleanUrlsPrivateDownloads'
    );
  }


  /**
   * function to actually perform URL tests.
   * @param $clean_url
   *    'clean_url' setting for test.
   * @param $file_downloads
   *    'file_downloads' setting for test.
   * @param $file_directory_path
   *    'file_directory_path' setting for tests.
   * @param $preset
   *    imagecache preset name to be used for test.
   * @param $path
   *    file path to be used for generating output.
   * @param $expected
   *    the url expected as output from imagecache_create_url
   * @param $error
   *    error message to be displayed on assertion failure.
   */
 
  private function _ImagecacheCreateUrlTest($clean_url, $file_downloads, $file_directory_path, $preset, $path, $expected, $error = '') {
    // Drupal settings
    $this->drupalVariableSet('clean_url', $clean_url);
    $this->drupalVariableSet('file_downloads', $file_downloads);
    $this->drupalVariableSet('file_directory_path', $file_directory_path);
    // Change base_url (and save original value)
    $original_baseurl = $GLOBALS['base_url'];
    $GLOBALS['base_url'] = 'http://example.com';

    // Generate URL and check it.
    $url = imagecache_create_url($preset, $path); 
    $this->assertTrue($url == $expected,
      t('[@type] expected "@expected" and got "@result"', array('@type' => $error, '@expected' => $expected, '@result' =>  $url))
    );

    // Restore base_url.
    $GLOBALS['base_url'] = $original_baseurl;
  }

}
