<?php
// $Id: fivestar.install,v 1.1.2.5 2008/03/12 06:57:24 quicksketch Exp $

function fivestar_install() {
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      db_query("CREATE TABLE {fivestar_comment} (
        cid int NOT NULL default '0',
        vote_id int(10) NOT NULL default '0',
        value tinyint unsigned NOT NULL default '0',
        PRIMARY KEY (cid),
        INDEX (vote_id)
      ) /*!40100 DEFAULT CHARACTER SET UTF8 */ ");
      break;

    case 'pgsql':
      db_query("CREATE TABLE {fivestar_comment} (
        cid integer NOT NULL default '0',
        vote_id integer NOT NULL default '0',
        value smallint NOT NULL default '0',
        PRIMARY KEY (cid)
      )");
      db_query("CREATE INDEX {fivestar_comment}_vote_id_idx ON {fivestar_comment} (vote_id)");
      break;
  }
}

function fivestar_uninstall() {
  db_query("DROP TABLE {fivestar_comment}");
  db_query("DELETE FROM {variable} WHERE name LIKE 'fivestar_%'");
}

/**
 * Add the fivestar comment tables.
 */
function fivestar_update_1() {
  $ret = array();

  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      db_query("CREATE TABLE {fivestar_comment} (
        cid int NOT NULL default '0',
        value tinyint unsigned NOT NULL default '0',
        PRIMARY KEY (cid)
      ) /*!40100 DEFAULT CHARACTER SET UTF8 */ ");
      break;

    case 'pgsql':
      db_query("CREATE TABLE {fivestar_comment} (
        cid int NOT NULL default '0',
        value smallint NOT NULL default '0',
        PRIMARY KEY (cid)
      )");
      break;
  }

  return $ret;
}

/**
 * Convert previous fivestar widget settings to new format.
 */
function fivestar_update_2() {
  $types = node_get_types('names');
  foreach ($types as $key => $name) {
    $style = variable_get('fivestar_style_'. $key, 'default');
    $enabled = variable_get('fivestar_'. $key, FALSE);
    // Split the display style into two variables for stars and text.
    if ($enabled) {
      switch ($style) {
        case 'default':
          variable_set('fivestar_style_'. $key, 'user');
          variable_set('fivestar_text_'. $key, 'average');
          break;
        case 'compact':
          variable_set('fivestar_style_'. $key, 'user');
          variable_set('fivestar_text_'. $key, 'none');
          break;
        case 'dual':
          variable_set('fivestar_text_'. $key, 'none');
          break;
      }
    }
    // We no longer save any settings if Fivestar is disabled.
    else {
      variable_del('fivestar_unvote_'. $key);
      variable_del('fivestar_style_'. $key);
      variable_del('fivestar_position_'. $key);
      variable_del('fivestar_position_teaser_'. $key);
    }
  }
  return array();
}

/**
 * Add vote_id column to the fivestar_comment table.
 */
function fivestar_update_5701() {
  $ret = array();

  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      $ret[] = update_sql("ALTER TABLE {fivestar_comment} ADD vote_id int(10) UNSIGNED NOT NULL DEFAULT '0' AFTER cid");
      $ret[] = update_sql("ALTER TABLE {fivestar_comment} ADD INDEX vote_id (vote_id)");
      break;

    case 'pgsql':
      $ret[] = update_sql("ALTER TABLE {fivestar_comment} ADD vote_id integer NOT NULL DEFAULT '0'");
      $ret[] = update_sql("CREATE INDEX {fivestar_comment}_vote_id_idx ON {fivestar_comment} (vote_id)");
      break;
  }

  $comments = db_query('SELECT fc.cid, fc.value, v.vote_id FROM {fivestar_comment} fc INNER JOIN {comments} c ON fc.cid = c.cid INNER JOIN {votingapi_vote} v ON fc.value = v.value AND c.nid = v.content_id AND c.uid = v.uid WHERE v.tag = "vote" AND v.value_type = "percent" AND v.content_type = "node"');
  while ($comment = db_fetch_object($comments)) {
    db_query('UPDATE {fivestar_comment} SET vote_id = %d WHERE cid = %d', $comment->vote_id, $comment->cid);
  }

  return $ret;
}
