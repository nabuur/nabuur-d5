<?php
// $Id: mailsave_to_filefield.module,v 1.2 2007/10/23 22:04:01 stuartgreenfield Exp $
/**
 * This module interacts with mailsave
 * It creates CCK filefield items from attached files.
 *
 * @TODO really wants to work out _all_ other places attachments
 * are taken to with _mailsave hooks and just collect everything else?
 */

/**
 * Implementation of hook_help().
 */
function mailsave_to_filefield_help($section) {
  switch ($section) {
    case 'admin/help#mailsave_to_filefield':
      $output .= '<p>'. t('This module is a plug-in for mailsave. If an incoming e-mail contains non-image attachments then they will be converted to CCK filefield items (inside the first CCK filefield field listed on the node). If there are no filefields in the node then then no processing occurs.');
      return $output;
  }
}

/**
 * Implementation of hook_perm
 */
function mailsave_to_filefield_perm() {
  return array(
    'convert to filefield',
   );
}

/**
 * Implementation of hook_mailsave().
 * Try to convert images to imagefields
 */
function mailsave_to_filefield_mailsave($node, $result, $i, $header, $mailbox) {

  // See if conversion to image is needed
  _mailsave_to_filefield_attempt_image($node);

  // Return the (possibly updated!) updated node
  return $node;
}

/**
 * Attempt to find images in the node and convert them to CCK imagefileds if they exit
 */
function _mailsave_to_filefield_attempt_image(&$node) {

  // If $node->mailsave_attachments is empty or imagefield not installed just return
  if (!$node->mailsave_attachments || !module_exists('filefield')) {
    return;
  }

  // If user doesn't have image conversion permissions just return
  if (!user_access('convert to filefield')) {
    // mailsave modules don't need to flag that the user doesn't have attach permission
    // it just ignores the process silently
    watchdog('mailsave', t('User doesn\'t have permission for Mailsave To Filefield'));
    return;
  }

  // Query to find a CCK Filefield attached to the node type
  $cck_info = content_types($node->type);
  $cck_filefield = FALSE;
  $cck_multiple = FALSE;
  $cck_file_extensions = '';

  if (is_array($cck_info['fields'])) {
    foreach ($cck_info['fields'] as $cck_field => $field_info) {
      if ($field_info['type'] == 'file') {
        $cck_filefield = $cck_field;
        $cck_multiple = $field_info['multiple'];
        $cck_file_extensions = $field_info['widget']['file_extensions'];
        break;
      }
    }
  }

  if (!$cck_filefield) {
    watchdog('mailsave', t('No CCK Filefields found for content type %type.', array ('%type' => $node->type)));
    return;
  }

  // Begin processing attachments
  foreach ($node->mailsave_attachments as $key => $file) {

    // Check to see if it's a image type that the imagefield will take
    if ( (trim($cck_file_extensions) == '' || strpos($cck_file_extensions, _file_ext($file['filename'])) !== FALSE ) && strpos($file['filemime'], 'image/') === FALSE )  {

      // If there are tokenized as part of imagefield 2.x let's use them
      if (function_exists('token_replace')) {
        global $user;
        $widget_image_path = token_replace($field_info['widget']['filepath'], 'user', $user);
      }
      else {
        $widget_image_path = $field_info['widget']['filepath'];
      }

      // Let's create the directory path if it hasn't been created already
      //      imagefield_check_directory($widget_image_path);

      // Build the array for the image found
      $cckfileinfo = array(
        'title'    => $file['filename'],
        'description' => $file['filename'],
        'filename' => $file['filename'],
        'filepath' => $file['filepath'],
        'filemime' => $file['filemime'],
        'filesize' => $file['filesize'],
        'fid'      => 'upload',
        'list'     => 1,
      );

      // Add the image info to the imagefield array
      $node->{$cck_filefield}[] = $cckfileinfo;

      // Lets remove the CCK image we found from attachments
      // We will leave the temp file though, as imagefield will need it
      unset($node->mailsave_attachments[$key]);

      // if this isn't a multiple image CCK filefield then let's exit
      if (!$cck_multiple) return;
    }
  }
}

/*
 * Find the file extension for a given attachement
 */
if (! function_exists('_file_ext')) {
  function _file_ext($filename) {
    $filename = strtolower($filename) ;
    $parts = explode('.', $filename);
    $ext = $parts[(sizeof($parts) - 1)];
    return $ext;
  }
}
